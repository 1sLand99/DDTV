name: Docker_Release

on:
  workflow_dispatch:
  release:
    types: [released]
  push:
    branches: [master]
    paths:
      - '.github/workflows/Docker_Release.yml'

env:
  DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Output Version
        id: version
        run: |
          Version=$(curl -sX GET "https://api.github.com/repos/CHKZL/DDTV/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --fail | awk '/tag_name/{print $4}' FS='["]')
          Version_major=$(echo "${Version%%.*}" | sed 's/[^0-9]//g')
          Version_minor=${Version#*.}
          echo "verall=${Version_major}.${Version_minor}" >> $GITHUB_OUTPUT
          echo "vertwo=${Version_major}.${Version_minor%%.*}" >> $GITHUB_OUTPUT
          echo "owner=${{ github.repository_owner }}" | tr '[A-Z]' '[a-z]' >> $GITHUB_OUTPUT
    outputs:
      owner:  ${{ steps.version.outputs.owner  }}
      verall: ${{ steps.version.outputs.verall }} # verall="3.0.1.9"
      vertwo: ${{ steps.version.outputs.vertwo }} # vertwo="3.0"
      DOTNET_VERSION: '6.0'
      DEPS_REPO: ddtv/deps
      CLI_REPO: ddtv/cli
      BACK_END_REPO: ddtv/webserver
      FRONT_END_REPO: ddtv/webui
# *_REPO 为仓库名兼路径名，更改后记得修改 文件存放位置、prepare.GitHubActions.sh、Docker_Build_Push.yml、Update_description_of_container_repo.yml

# jobs.<job_id>.with.<with_id>上下文不支持env, 仅支持 github, needs
  WEBUI_nginx-alpine:
    if: false
    needs: [Prepare]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.FRONT_END_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      platforms:  linux/amd64, linux/arm64, linux/arm/v7, linux/386, linux/arm/v6, linux/ppc64le, linux/s390x
      build-args: REPO=nginx:stable-alpine

# alpine
  Deps_alpine:
    needs: [Prepare]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.DEPS_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      build-args: REPO=mcr.microsoft.com/dotnet/aspnet:${{ needs.Prepare.outputs.DOTNET_VERSION }}-alpine

  CLI_alpine:
    needs: [Prepare, Deps_alpine]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.CLI_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      build-args: REPO=ghcr.io/${{ needs.Prepare.outputs.owner }}/${{ needs.Prepare.outputs.DEPS_REPO }}:alpine

  WEBServer_alpine:
    needs: [Prepare, Deps_alpine]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.BACK_END_REPO }}
      os_id:      alpine
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      build-args: REPO=ghcr.io/${{ needs.Prepare.outputs.owner }}/${{ needs.Prepare.outputs.DEPS_REPO }}:alpine

# debian
  Deps_debian:
    needs: [Prepare]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.DEPS_REPO }}
      os_id:      debian
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      build-args: REPO=mcr.microsoft.com/dotnet/aspnet:${{ needs.Prepare.outputs.DOTNET_VERSION }}

  CLI_debian:
    needs: [Prepare, Deps_debian]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.CLI_REPO }}
      os_id:      debian
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      build-args: REPO=ghcr.io/${{ needs.Prepare.outputs.owner }}/${{ needs.Prepare.outputs.DEPS_REPO }}:debian

  WEBServer_debian:
    needs: [Prepare, Deps_debian]
    uses: moomiji/docker-ddtv/.github/workflows/Docker_Build_Push.yml@docker
    with:
      repo:       ${{ needs.Prepare.outputs.BACK_END_REPO }}
      os_id:      debian
      verall:     ${{ needs.Prepare.outputs.verall }}
      vertwo:     ${{ needs.Prepare.outputs.vertwo }}
      build-args: REPO=ghcr.io/${{ needs.Prepare.outputs.owner }}/${{ needs.Prepare.outputs.DEPS_REPO }}:debian

# 更新DOCKER HUB文档
  Update_Description:
    runs-on: ubuntu-latest
    needs: [Prepare]
    steps:
      - uses: actions/checkout@v3
      - name: ${{ needs.Prepare.outputs.DEPS_REPO }}
        uses: christian-korneck/update-container-description-action@v1
        with:
          destination_container_repo: ${{ needs.Prepare.outputs.DEPS_REPO }}

      - name: ${{ needs.Prepare.outputs.CLI_REPO }}
        uses: christian-korneck/update-container-description-action@v1
        with:
          destination_container_repo: ${{ needs.Prepare.outputs.CLI_REPO }}

      - name: ${{ needs.Prepare.outputs.BACK_END_REPO }}
        uses: christian-korneck/update-container-description-action@v1
        with:
          destination_container_repo: ${{ needs.Prepare.outputs.BACK_END_REPO }}

      - name: ${{ needs.Prepare.outputs.FRONT_END_REPO }}
        uses: christian-korneck/update-container-description-action@v1
        if: false
        with:
          destination_container_repo: ${{ needs.Prepare.outputs.FRONT_END_REPO }}
